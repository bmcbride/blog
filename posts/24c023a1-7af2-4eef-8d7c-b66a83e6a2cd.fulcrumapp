{
  "form": {
    "id": "24c023a1-7af2-4eef-8d7c-b66a83e6a2cd",
    "name": "MassGIS GeoServer Street Lookup",
    "description": "",
    "bounding_box": null,
    "record_title_key": "b868",
    "title_field_keys": [
      "b868"
    ],
    "status_field": {
      "type": "StatusField",
      "label": "Status",
      "key": "@status",
      "data_name": "status",
      "default_value": "",
      "enabled": false,
      "read_only": false,
      "hidden": false,
      "description": "",
      "choices": [],
      "required": false,
      "disabled": false,
      "default_previous_value": false
    },
    "auto_assign": false,
    "hidden_on_dashboard": false,
    "record_count": 2,
    "geometry_types": [
      "Point"
    ],
    "geometry_required": false,
    "script": "ON('change-geometry', function(event) {\n\n  // build spatial \"distance within\" filter (http://docs.geoserver.org/latest/en/user/filter/filter_reference.html#filter-fe-reference)\n  var filter = \"<Filter xmlns:gml='http://www.opengis.net/gml'>\" +\n    \"<DWithin>\" +\n      \"<PropertyName>SHAPE</PropertyName>\" +\n      \"<gml:Point srsName='http://www.opengis.net/gml/srs/epsg.xml#4326'>\" +\n        \"<gml:coordinates>\" + LONGITUDE() + \",\" + LATITUDE() + \"</gml:coordinates>\" +\n      \"</gml:Point>\" +\n      \"<Distance units='m'>100</Distance>\" +\n    \"</DWithin>\" +\n  \"</Filter>\";\n\n  // geoserver URL with encoded filter\n  var geoserverURL = \"http://giswebservices.massgis.state.ma.us/geoserver/wfs?request=getfeature&version=1.0.0&service=wfs&typename=massgis:GISDATA.EOTROADS_ARC&propertyname=STREETNAME&outputformat=json&filter=\" + encodeURIComponent(filter);\n\n  // use cors/https proxy for web requests \n  var mobile = ['iOS', 'Android'];\n  if (mobile.indexOf(PLATFORM()) === -1) {\n    geoserverURL = \"https://crossorigin.me/\" + geoserverURL;\n  }\n\n  // configure request options\n  var options = {\n    url: geoserverURL\n  };\n\n  // give the user a loading indicator while it's fetching the data from GeoServer\n  PROGRESS('Searching for nearby streets ...');\n\n  // configure the http request\n  REQUEST(options, function(error, response, body) {\n    if (error) {\n      ALERT('Error with request: ' + INSPECT(error));\n      PROGRESS(null);\n    } else {\n      var data = JSON.parse(body); // parse the JSON response\n      var features = data.features; // grab the GeoJSON features\n      var streets = []; // array holder for nearby streets\n      // loop through the features returned\n      for (var i = 0; i < features.length; i++) {\n        var streetName = features[i].properties.STREETNAME;\n        // if array doesn't already contain streetname, add it\n        if (streets.indexOf(streetName) === -1) {\n          streets.push(streetName);\n        }\n      }\n      // if we've got some streets, use them in the choice list (sorted alphabetically)\n      if (streets.length > 0) {\n        SETCHOICES('street_name', streets.sort());\n        PROGRESS(null);\n      } else {\n        PROGRESS(null);\n        ALERT('No nearby streets found... Are you sure you are in Massachussets?');\n      }\n    }\n  });\n});",
    "elements": [
      {
        "type": "ChoiceField",
        "key": "b868",
        "label": "Street Name",
        "description": null,
        "required": true,
        "disabled": false,
        "hidden": false,
        "data_name": "street_name",
        "default_value": null,
        "visible_conditions_type": null,
        "visible_conditions": null,
        "required_conditions_type": null,
        "required_conditions": null,
        "multiple": false,
        "allow_other": false,
        "choices": [
          {
            "label": "A",
            "value": "A"
          },
          {
            "label": "B",
            "value": "B"
          }
        ],
        "default_previous_value": false
      }
    ],
    "created_at": "2016-07-12T04:25:47Z",
    "updated_at": "2016-07-12T20:14:23Z"
  }
}